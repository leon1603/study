# -*- coding: utf-8 -*-
"""medical_application.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a37GWYJqrU-zjd2gIeJVzmdR9ZTxBq2A
"""

!pip install cbmpy

import cbmpy
import os
import numpy as np
import pandas as pd

"""# Medical application

## *Mycobacterium tuberculosis*

Before we get started on the exercise, there are a few steps we have to go through to load the genome scale model into cbmpy (Constraint-Based Modeling in Python), which is a Python-based genome-scale model handling package. The documentation for cbmpy is available here: https://pythonhosted.org/cbmpy/modules_doc.html.

1.   Download the *Mycobacterium tuberculosis* GSM iEK1008 from the BiGG database (http://bigg.ucsd.edu/models/iEK1008). (If you wish, you can use the BiGG database during these exercises to look up reaction names etc.)
2.   On the left-hand-side, click on the file-folder icon.
3. Upload the model here, so that it is stored in your working directory of this file.

A genome scale model is a description of all the (known) possible reactions in a genome. Using this, we can study the metabolism of an organism. In the case of a pathogen, we can look for reactions that alter its metabolism in such a way that it cannot grow anymore. These are potential reactions that medicine can target. In this exercise, we perform this analysis step-by-step.

## 1. Load the model and perform FBA. Identify the medium that is simulated.

What is the maximal growth rate of *M. tuberculosis* on this medium? What is the biomass yield on the limiting substrate? If you don't know what a metabolite name is, look it up in the [BiGG database](http://bigg.ucsd.edu/) or via model.getSpecies(id).name.
"""

Mtub = cbmpy.loadModel('iEK1008.xml')

###
Mtub.getSpeciesIds("accoa")
Mtub.getReactionIdsAssociatedWithSpecies("M_accoa_c")
Mtub.getReactionActivity("R_ACALD")
Mtub.getReactionNames("FAD")
Mtub.getReactionIds("FADB3")
Mtub.getReactionObjects("FAD")

Mtub.getFluxBoundByID('R_BIOMASS__2')
Mtub.getReactionIds("PFK")
Mtub.getActiveObjectiveReactionIds()
Mtub.setObjectiveFlux("R_DMHDRFS_1")
Mtub.getSpecies()

Mtub.getObjectiveIds("2")
# Get all metabolites (species) and stoichiometric coefficients involved in the biomass reaction
Mtub.getReaction(Mtub.getReactionIds("R_BIO")[0]).getStoichiometry()

###

result = cbmpy.CBGLPK.glpk_analyzeModel(Mtub, method='s')
print(result)
fluxes = Mtub.getReactionValues()

for r in Mtub.reactions:
  if r.id[:4] == 'R_EX' and r.getLowerBound() < 0:
    print(r.id + '; lower bound: ' + str(r.getLowerBound()) + '; actual flux: ' + str(fluxes[r.id]))
    
len(Mtub.species)
len(Mtub.reactions)

"""Question: Read the output, how many reactions are there? How many reactants?

## 2. Figure out which non-trivial bounds come with the model.

Trivial bounds are all bounds that are -1000, 0 or 1000 (why is this?). What is the concequence of such a bound?
"""

##
non_trivial_bounds = 0

for r in Mtub.reactions:
    # Get the lower and upper bounds for the reaction
    lower_bound, upper_bound = Mtub.getReactionBounds(r.id)[1:3]
    
    # Check if both bounds are considered non-trivial
    if lower_bound not in [-1000, 1000, 0] or upper_bound not in [-1000, 1000, 0]:
        non_trivial_bounds += 1
##

non_trivial_bounds = 0
for r in Mtub.reactions:
  if (r.getLowerBound() != -1000 and r.getLowerBound() !=0) or (r.getUpperBound()!= 0 and r.getUpperBound() != 1000):
    print(r.id + '; lower bound: ' + str(r.getLowerBound())+ '; upper bound: ' + str(r.getUpperBound()) + '; actual flux: ' + str(fluxes[r.id]))
    non_trivial_bounds +=1

"""## 3. Perform a screen of single reaction deletions.

There are 4 categories in which each reaction can fall:


1.   Lethal (active in optimal solution)                                Vobjective_KO == 0 | (R_upper, R_lower == [0, 0]), (Vreaction-opt !=0)
2. Nonlethal, partially replacable (active in optimal solution)         Vobjective_KO < vobjective | (R_upper, R_lower == [0, 0]), (Vreaction-opt !=0) ?????
3. Nonlethal, fully replacable (active in optimal solution)             Vobjective_KO == vobjective | (R_upper, R_lower == [0, 0]), (Vreaction-opt !=0) ?????
4. Nonlethal, fully replacable (inactive in optimal solution).          Vobjective_KO == vobjective | (R_upper, R_lower == [0, 0]), (Vreaction-opt ==0)

First, figure out how to find out the effect of growth rate for a **gene** deletion. Do this for 10 reactions (the RAM on Google Colab is not sufficient for doing it for every gene in the model).
"""

result_df = pd.DataFrame(columns=['biomass flux'])

for r in Mtub.reactions[:10]:
  old_bounds = [r.getLowerBound(), r.getUpperBound()]
  Mtub.setReactionBounds(r.id, 0, 0)

  result = cbmpy.doFBA(Mtub, quiet=True)
  result_df.loc[r.id, 'biomass flux'] = result

  Mtub.setReactionBounds(r.id, old_bounds[0], old_bounds[1])

"""## From the [given dataset](https://docs.google.com/spreadsheets/d/1035oLyUuZPcH5pZnuNLZndFeaFZRam67/edit?usp=drive_link&ouid=118096143909887222104&rtpof=true&sd=true) of effect on growth rate of all genes in the model, figure out which genes fall into which group (the groups are described above). (Download the exel file, upload it to the Colab workspace and perform analysis)."""



"""## 5. Look at [this](https://doi.org/10.1016/j.chembiol.2014.08.020) paper. Identify a number of medicine mentioned and test the growth rate reduction of these medicine, if it would fully inhibit the targeted reaction."""

Mtub.setReactionBounds('R_PYK', 0, 0)

result = cbmpy.doFBA(Mtub)

Mtub.setReactionBounds('R_PYK', 0, 1000)

#  PYK is not lethal (you could also look at the given dataset, but then it is genes and not reactions)

Mtub.setReactionBounds('R_CS', 0, 0)
result = cbmpy.doFBA(Mtub)
Mtub.setReactionBounds('R_CS', 0, 1000)
# Not lethal, growth rate reducing

# Fatty acid biosynthesis

Mtub.setReactionBounds('R_ACCC_1', 0, 0)
result = cbmpy.doFBA(Mtub)
Mtub.setReactionBounds('R_ACCC_1', 0, 1000)

##

print(f"Potential target genes: {Mtub.getAllGeneProteinAssociations()['R_ACCC_1']}, but more applicable to biotechnology applications since you don't really target genes in pathogen killing I think")

##

"""Question: Why does knocking out fatty acid biosynthesis kills the organism?"""